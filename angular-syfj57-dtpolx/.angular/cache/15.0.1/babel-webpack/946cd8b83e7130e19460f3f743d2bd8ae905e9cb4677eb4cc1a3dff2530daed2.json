{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { increment, decrement, reset } from \"./store/counter.actions\";\nlet MyCounterComponent = class MyCounterComponent {\n  constructor(store) {\n    this.store = store;\n    store.select(\"counter\").subscribe(data => {\n      this.count = data.counter;\n    });\n  }\n  increment() {\n    this.store.dispatch(increment());\n  }\n  decrement() {\n    this.store.dispatch(decrement());\n  }\n  reset() {\n    this.store.dispatch(reset());\n  }\n};\nMyCounterComponent = __decorate([Component({\n  selector: \"app-my-counter\",\n  templateUrl: \"./my-counter.component.html\"\n})], MyCounterComponent);\nexport { MyCounterComponent };\n/*\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://github.com/ngrx/platform\r\n*/","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAASC,SAAS,EAAEC,SAAS,EAAEC,KAAK,QAAQ,yBAAyB;AAQ9D,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAG7BC,YAAoBC,KAAuC;IAAvC,UAAK,GAALA,KAAK;IACvBA,KAAK,CAACC,MAAM,CAAC,SAAS,CAAC,CAACC,SAAS,CAAEC,IAAI,IAAI;MACzC,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACE,OAAO;IAC3B,CAAC,CAAC;EACJ;EAEAV,SAAS;IACP,IAAI,CAACK,KAAK,CAACM,QAAQ,CAACX,SAAS,EAAE,CAAC;EAClC;EAEAC,SAAS;IACP,IAAI,CAACI,KAAK,CAACM,QAAQ,CAACV,SAAS,EAAE,CAAC;EAClC;EAEAC,KAAK;IACH,IAAI,CAACG,KAAK,CAACM,QAAQ,CAACT,KAAK,EAAE,CAAC;EAC9B;CACD;AApBYC,kBAAkB,eAJ9BJ,SAAS,CAAC;EACTa,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE;CACd,CAAC,GACWV,kBAAkB,CAoB9B;SApBYA,kBAAkB;AAsB/B","names":["Component","increment","decrement","reset","MyCounterComponent","constructor","store","select","subscribe","data","count","counter","dispatch","selector","templateUrl"],"sourceRoot":"","sources":["C:\\Demo\\angular-syfj57-dtpolx\\src\\app\\my-counter\\my-counter.component.ts"],"sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { increment, decrement, reset } from \"./store/counter.actions\";\r\nimport { counterState } from \"./store/counter.state\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-my-counter\",\r\n  templateUrl: \"./my-counter.component.html\",\r\n})\r\nexport class MyCounterComponent {\r\n  count: number;\r\n\r\n  constructor(private store: Store<{ counter: counterState }>) {\r\n    store.select(\"counter\").subscribe((data) => {\r\n      this.count = data.counter;\r\n    });\r\n  }\r\n\r\n  increment() {\r\n    this.store.dispatch(increment());\r\n  }\r\n\r\n  decrement() {\r\n    this.store.dispatch(decrement());\r\n  }\r\n\r\n  reset() {\r\n    this.store.dispatch(reset());\r\n  }\r\n}\r\n\r\n/*\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://github.com/ngrx/platform\r\n*/\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}