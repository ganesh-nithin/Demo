{"ast":null,"code":"import { changeName, customIncrement } from \"../store/counter.actions\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/forms\";\nexport class CustomCounterInputComponent {\n  constructor(store) {\n    this.store = store;\n  }\n  ngOnInit() {\n    this.store.select(\"counter\").subscribe(data => {\n      console.log(\"Channel Name Called\");\n      this.name = data.name;\n    });\n  }\n  onAdd() {\n    this.store.dispatch(customIncrement({\n      value: +this.value\n    }));\n  }\n  onChangeName() {\n    this.store.dispatch(changeName());\n  }\n  static #_ = this.ɵfac = function CustomCounterInputComponent_Factory(t) {\n    return new (t || CustomCounterInputComponent)(i0.ɵɵdirectiveInject(i1.Store));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CustomCounterInputComponent,\n    selectors: [[\"app-custom-counter-input\"]],\n    decls: 9,\n    vars: 2,\n    consts: [[\"type\", \"text\", \"name\", \"\", \"id\", \"\", \"placeholder\", \"Enter Value\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n    template: function CustomCounterInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CustomCounterInputComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.value = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function CustomCounterInputComponent_Template_button_click_4_listener() {\n          return ctx.onAdd();\n        });\n        i0.ɵɵtext(5, \"Add to counter\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\")(7, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function CustomCounterInputComponent_Template_button_click_7_listener() {\n          return ctx.onChangeName();\n        });\n        i0.ɵɵtext(8, \"Change Name\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.name);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.value);\n      }\n    },\n    dependencies: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAGA,SAASA,UAAU,EAAEC,eAAe,QAAQ,0BAA0B;;;;AAOtE,OAAM,MAAOC,2BAA2B;EAItCC,YAAoBC,KAAuC;IAAvC,UAAK,GAALA,KAAK;EAAqC;EAE9DC,QAAQ;IACN,IAAI,CAACD,KAAK,CAACE,MAAM,CAAC,SAAS,CAAC,CAACC,SAAS,CAAEC,IAAI,IAAI;MAC9CC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAElC,IAAI,CAACC,IAAI,GAAGH,IAAI,CAACG,IAAI;IACvB,CAAC,CAAC;EACJ;EAEAC,KAAK;IACH,IAAI,CAACR,KAAK,CAACS,QAAQ,CAACZ,eAAe,CAAC;MAAEa,KAAK,EAAE,CAAC,IAAI,CAACA;IAAK,CAAE,CAAC,CAAC;EAC9D;EAEAC,YAAY;IACV,IAAI,CAACX,KAAK,CAACS,QAAQ,CAACb,UAAU,EAAE,CAAC;EACnC;EAAC;qBApBUE,2BAA2B;EAAA;EAAA;UAA3BA,2BAA2B;IAAAc;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCVxCC,2BAAK;QACAA,YAAU;QAAAA,iBAAI;QACjBA,gCAME;QADAA;UAAA;QAAA,EAAmB;QALrBA,iBAME;QACFA,iCAA0B;QAAlBA;UAAA,OAASC,WAAO;QAAA,EAAC;QAACD,8BAAc;QAAAA,iBAAS;QAGnDA,2BAAK;QACKA;UAAA,OAASC,kBAAc;QAAA,EAAC;QAACD,2BAAW;QAAAA,iBAAS;;;QAZlDA,eAAU;QAAVA,8BAAU;QAMXA,eAAmB;QAAnBA,mCAAmB","names":["changeName","customIncrement","CustomCounterInputComponent","constructor","store","ngOnInit","select","subscribe","data","console","log","name","onAdd","dispatch","value","onChangeName","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Demo\\angular-syfj57-dtpolx\\src\\app\\my-counter\\custom-counter-input\\custom-counter-input.component.ts","C:\\Demo\\angular-syfj57-dtpolx\\src\\app\\my-counter\\custom-counter-input\\custom-counter-input.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\nimport { counterState } from \"../store/counter.state\";\nimport { Store } from \"@ngrx/store\";\nimport { changeName, customIncrement } from \"../store/counter.actions\";\n\n@Component({\n  selector: \"app-custom-counter-input\",\n  templateUrl: \"./custom-counter-input.component.html\",\n  styleUrls: [\"./custom-counter-input.component.css\"],\n})\nexport class CustomCounterInputComponent {\n  value: number;\n  name: string;\n\n  constructor(private store: Store<{ counter: counterState }>) {}\n\n  ngOnInit(): void {\n    this.store.select(\"counter\").subscribe((data) => {\n      console.log(\"Channel Name Called\");\n\n      this.name = data.name;\n    });\n  }\n\n  onAdd() {\n    this.store.dispatch(customIncrement({ value: +this.value }));\n  }\n\n  onChangeName() {\n    this.store.dispatch(changeName());\n  }\n}\n","<div>\n  <p>{{ name }}</p>\n  <input\n    type=\"text\"\n    name=\"\"\n    id=\"\"\n    placeholder=\"Enter Value\"\n    [(ngModel)]=\"value\"\n  />\n  <button (click)=\"onAdd()\">Add to counter</button>\n</div>\n\n<div>\n  <button (click)=\"onChangeName()\">Change Name</button>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}